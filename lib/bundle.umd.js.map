{"version":3,"file":"bundle.umd.js","sources":["../src/errors/CircularDependencyError.js","../src/errors/DuplicateError.js","../src/errors/NotFoundError.js","../src/services/ComponentContainer.js","../src/services/ComponentScan.js","../src/decorators/Bootstrap.js","../src/decorators/Component.js"],"sourcesContent":["// @flow\n\nexport default class CircularDependencyError extends Error {\n  constructor() {\n    super('There is a cycle in dependencies');\n  }\n}\n","// @flow\n\nexport default class DuplicateError extends Error {\n  constructor(name: string) {\n    super(`Multiple components with the same name: ${name}`);\n  }\n}\n","// @flow\n\nexport default class NotFoundError extends Error {\n  constructor(name: string) {\n    super(`Component ${name} not found`);\n  }\n}\n","// @flow\n\nimport CircularDependencyError from '../errors/CircularDependencyError';\nimport DuplicateError from '../errors/DuplicateError';\nimport NotFoundError from '../errors/NotFoundError';\n\nexport type ComponentDefinition = {\n  name: string,\n  constructor: Function,\n  dependencies: string[],\n};\n\nexport type ComponentDefinitionMap = {\n  [string]: ComponentDefinition,\n};\n\nexport class ComponentContainer {\n  registered: ComponentDefinitionMap = {};\n  components = {};\n\n  register({ name, constructor, dependencies }: ComponentDefinition): void {\n    if (this.registered[name]) {\n      throw new DuplicateError(name);\n    }\n\n    this.registered[name] = {\n      name,\n      constructor,\n      dependencies,\n    };\n  }\n\n  start(): void {\n    if (this.areDependenciesCyclic()) {\n      throw new CircularDependencyError();\n    }\n\n    this.createDependencies();\n  }\n\n  getComponent = (name: string): any => {\n    const component = this.components[name];\n    if (component === undefined) {\n      throw new NotFoundError(name);\n    }\n\n    return component;\n  }\n\n  createDependencies = () => Object.keys(this.registered).forEach(this.createDependency);\n\n  createNodeDependencies = (key: string) => {\n    this.registered[key].dependencies.forEach(this.createDependency);\n  }\n\n  createDependency = (dep: string) => {\n    if (this.components[dep] === undefined) {\n      if (this.registered[dep].dependencies.length > 0) {\n        this.createNodeDependencies(dep);\n      }\n\n      this.components[dep] = new this.registered[dep]\n        .constructor(...this.getDependenciesFromContainer(this.registered[dep].dependencies));\n    }\n  }\n\n  getDependenciesFromContainer = (dependencies: string[]): any[] =>\n    dependencies.map(this.getComponent)\n\n  areDependenciesCyclic(): boolean {\n    return Object.keys(this.registered).some(this.isComponentCyclic);\n  }\n\n  isComponentCyclic = (key: string): boolean => this.registered[key].dependencies.includes(key)\n      || this.checkComponentDependencies(key, this.registered[key].dependencies)\n\n  checkComponentDependencies(key: string, dependencies: string[]): boolean {\n    return dependencies.some((dep: string) => {\n      if (this.registered[dep] === undefined) {\n        throw new NotFoundError(dep);\n      }\n\n      return dependencies.includes(key)\n        || this.checkComponentDependencies(key, this.registered[dep].dependencies);\n    });\n  }\n}\n\nexport default new ComponentContainer();\n","// @flow\n\nimport glob from 'glob';\n\nexport default class ComponentScan {\n  static scan = (paths: string[]): void => {\n    paths\n      .reduce(ComponentScan.getPaths, [])\n      .forEach(require);\n  }\n\n  static getPaths = (acc: string[], path: string) => [\n    ...acc,\n    ...glob.sync(path),\n  ]\n}\n","// @flow\n\nimport componentContainer from '../services/ComponentContainer';\nimport ComponentScan from '../services/ComponentScan';\n\nconst Bootstrap = ({ scan }: { scan: string[] }) => (target: any) => {\n  ComponentScan.scan(scan);\n\n  componentContainer.start();\n\n  target.main();\n};\n\nexport default Bootstrap;\n","// @flow\n\nimport componentContainer from '../services/ComponentContainer';\n\ntype ComponentConfig = {\n  name: string,\n  dependencies: string[],\n};\n\nconst Component = ({ name, dependencies = [] }: ComponentConfig) => (target: any) => {\n  componentContainer.register({ name, dependencies, constructor: target });\n};\n\nexport default Component;\n"],"names":["CircularDependencyError","Error","DuplicateError","name","NotFoundError","ComponentContainer","component","components","undefined","Object","keys","registered","forEach","createDependency","key","dependencies","dep","length","createNodeDependencies","constructor","getDependenciesFromContainer","map","getComponent","includes","checkComponentDependencies","areDependenciesCyclic","createDependencies","some","isComponentCyclic","ComponentScan","paths","reduce","getPaths","require","acc","path","glob","sync","Bootstrap","scan","target","componentContainer","start","main","Component","register"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEqBA;;;EACnB,qCAAc;EAAA;;EAAA,gGACN,kCADM;EAEb;;;;;qBAHkDC;;MCAhCC;;;EACnB,0BAAYC,IAAZ,EAA0B;EAAA;;EAAA,yIACyBA,IADzB;EAEzB;;;;;qBAHyCF;;MCAvBG;;;EACnB,yBAAYD,IAAZ,EAA0B;EAAA;;EAAA,0GACLA,IADK;EAEzB;;;;;qBAHwCF;;MCc9BI,kBAAb;EAAA;EAAA;EAAA;EAAA;;EAAA;;EAAA,wJACuC,EADvC,iBAEe,EAFf,mBAwBiB,UAACF,IAAD,EAAuB;EACpC,UAAMG,YAAY,MAAKC,UAAL,CAAgBJ,IAAhB,CAAlB;;EACA,UAAIG,cAAcE,SAAlB,EAA6B;EAC3B,cAAM,IAAIJ,aAAJ,CAAkBD,IAAlB,CAAN;EACD;;EAED,aAAOG,SAAP;EACD,KA/BH,yBAiCuB;EAAA,aAAMG,OAAOC,IAAP,CAAY,MAAKC,UAAjB,EAA6BC,OAA7B,CAAqC,MAAKC,gBAA1C,CAAN;EAAA,KAjCvB,6BAmC2B,UAACC,GAAD,EAAiB;EACxC,YAAKH,UAAL,CAAgBG,GAAhB,EAAqBC,YAArB,CAAkCH,OAAlC,CAA0C,MAAKC,gBAA/C;EACD,KArCH,uBAuCqB,UAACG,GAAD,EAAiB;EAClC,UAAI,MAAKT,UAAL,CAAgBS,GAAhB,MAAyBR,SAA7B,EAAwC;EACtC,YAAI,MAAKG,UAAL,CAAgBK,GAAhB,EAAqBD,YAArB,CAAkCE,MAAlC,GAA2C,CAA/C,EAAkD;EAChD,gBAAKC,sBAAL,CAA4BF,GAA5B;EACD;;EAED,cAAKT,UAAL,CAAgBS,GAAhB,eAA2B,MAAKL,UAAL,CAAgBK,GAAhB,EACxBG,WADH,qBACkB,MAAKC,4BAAL,CAAkC,MAAKT,UAAL,CAAgBK,GAAhB,EAAqBD,YAAvD,CADlB;EAED;EACF,KAhDH,mCAkDiC,UAACA,YAAD;EAAA,aAC7BA,aAAaM,GAAb,CAAiB,MAAKC,YAAtB,CAD6B;EAAA,KAlDjC,wBAyDsB,UAACR,GAAD;EAAA,aAA0B,MAAKH,UAAL,CAAgBG,GAAhB,EAAqBC,YAArB,CAAkCQ,QAAlC,CAA2CT,GAA3C,KACvC,MAAKU,0BAAL,CAAgCV,GAAhC,EAAqC,MAAKH,UAAL,CAAgBG,GAAhB,EAAqBC,YAA1D,CADa;EAAA,KAzDtB;EAAA;;EAAA;EAAA;EAAA,mCAI2E;EAAA,UAA9DZ,IAA8D,QAA9DA,IAA8D;EAAA,UAAxDgB,WAAwD,QAAxDA,WAAwD;EAAA,UAA3CJ,YAA2C,QAA3CA,YAA2C;;EACvE,UAAI,KAAKJ,UAAL,CAAgBR,IAAhB,CAAJ,EAA2B;EACzB,cAAM,IAAID,cAAJ,CAAmBC,IAAnB,CAAN;EACD;;EAED,WAAKQ,UAAL,CAAgBR,IAAhB,IAAwB;EACtBA,kBADsB;EAEtBgB,gCAFsB;EAGtBJ;EAHsB,OAAxB;EAKD;EAdH;EAAA;EAAA,4BAgBgB;EACZ,UAAI,KAAKU,qBAAL,EAAJ,EAAkC;EAChC,cAAM,IAAIzB,uBAAJ,EAAN;EACD;;EAED,WAAK0B,kBAAL;EACD;EAtBH;EAAA;EAAA,4CAqDmC;EAC/B,aAAOjB,OAAOC,IAAP,CAAY,KAAKC,UAAjB,EAA6BgB,IAA7B,CAAkC,KAAKC,iBAAvC,CAAP;EACD;EAvDH;EAAA;EAAA,+CA4D6Bd,GA5D7B,EA4D0CC,YA5D1C,EA4D2E;EAAA;;EACvE,aAAOA,aAAaY,IAAb,CAAkB,UAACX,GAAD,EAAiB;EACxC,YAAI,OAAKL,UAAL,CAAgBK,GAAhB,MAAyBR,SAA7B,EAAwC;EACtC,gBAAM,IAAIJ,aAAJ,CAAkBY,GAAlB,CAAN;EACD;;EAED,eAAOD,aAAaQ,QAAb,CAAsBT,GAAtB,KACF,OAAKU,0BAAL,CAAgCV,GAAhC,EAAqC,OAAKH,UAAL,CAAgBK,GAAhB,EAAqBD,YAA1D,CADL;EAED,OAPM,CAAP;EAQD;EArEH;;EAAA;EAAA;AAwEA,2BAAe,IAAIV,kBAAJ,EAAf;;MCpFqBwB;;;;kCAAAA,uBACL,UAACC,KAAD,EAA2B;EACvCA,QACGC,MADH,CACUF,cAAcG,QADxB,EACkC,EADlC,EAEGpB,OAFH,CAEWqB,OAFX;EAGD,gBAEiB,UAACC,GAAD,EAAgBC,IAAhB;EAAA,4BACbD,GADa,4BAEbE,KAAKC,IAAL,CAAUF,IAAV,CAFa;EAAA;;ECNpB,IAAMG,YAAY,SAAZA,SAAY;EAAA,MAAGC,IAAH,QAAGA,IAAH;EAAA,SAAkC,UAACC,MAAD,EAAiB;EACnEX,kBAAcU,IAAd,CAAmBA,IAAnB;EAEAE,uBAAmBC,KAAnB;EAEAF,WAAOG,IAAP;EACD,GANiB;EAAA,CAAlB;;ECIA,IAAMC,YAAY,SAAZA,SAAY;EAAA,MAAGzC,IAAH,QAAGA,IAAH;EAAA,+BAASY,YAAT;EAAA,MAASA,YAAT,kCAAwB,EAAxB;EAAA,SAAkD,UAACyB,MAAD,EAAiB;EACnFC,uBAAmBI,QAAnB,CAA4B;EAAE1C,gBAAF;EAAQY,gCAAR;EAAsBI,mBAAaqB;EAAnC,KAA5B;EACD,GAFiB;EAAA,CAAlB;;;;;;;;;;;;;"}